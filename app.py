import streamlit as st
import random
import json
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import graphviz
from deap import base, creator, tools, algorithms, gp, cma, benchmarks

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–¢–†–ê–ù–ò–¶–´ ---
st.set_page_config(
    layout="wide",
    page_title="–ê–Ω–∞–ª–∏–∑ —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤",
    page_icon="üî¨"
)

# --- –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –¢–ò–ü–û–í DEAP (–¥–µ–ª–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑) ---
# –î–ª—è –ß–∞—Å—Ç–∏ 1
creator.create("FitnessMax", base.Fitness, weights=(1.0,))
creator.create("Individual", list, fitness=creator.FitnessMax)

# –î–ª—è –ß–∞—Å—Ç–∏ 2 (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ Individual, –Ω–æ —Å –¥—Ä—É–≥–∏–º —Ñ–∏—Ç–Ω–µ—Å–æ–º)
creator.create("FitnessMin", base.Fitness, weights=(-1.0,))
creator.create("IndividualCMA", list, fitness=creator.FitnessMin)


# --- –§–£–ù–ö–¶–ò–ò-–í–´–ß–ò–°–õ–ò–¢–ï–õ–ò (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º) ---

@st.cache_data
def run_genetic_algorithm(target_sum, n_attr, ngen, cxpb, mutpb, pop_size=50):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ì–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –ê–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è –ß–∞—Å—Ç–∏ 1."""
    toolbox = base.Toolbox()
    toolbox.register("attr_bool", random.randint, 0, 1)
    toolbox.register("individual", tools.initRepeat, creator.Individual, toolbox.attr_bool, n=n_attr)
    toolbox.register("population", tools.initRepeat, list, toolbox.individual)

    def eval_func(individual):
        return len(individual) - abs(sum(individual) - target_sum),

    toolbox.register("evaluate", eval_func)
    toolbox.register("mate", tools.cxTwoPoint)
    toolbox.register("mutate", tools.mutFlipBit, indpb=0.05)
    toolbox.register("select", tools.selTournament, tournsize=3)

    population = toolbox.population(n=pop_size)
    stats = tools.Statistics(lambda ind: ind.fitness.values)
    stats.register("avg", np.mean)
    stats.register("max", np.max)

    result_pop, logbook = algorithms.eaSimple(population, toolbox, cxpb=cxpb, mutpb=mutpb, ngen=ngen,
                                               stats=stats, verbose=False)
    best_individual = tools.selBest(result_pop, k=1)[0]
    return best_individual, logbook

@st.cache_data
def run_cma_es(selected_func, ngen_cma, sigma, num_individuals=10):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç CMA-ES –¥–ª—è –ß–∞—Å—Ç–∏ 2."""
    if selected_func == "–†–∞—Å—Ç—Ä–∏–≥–∏–Ω":
        eval_func_cma = benchmarks.rastrigin
        centroid_start = [5.0] * num_individuals
    else: # –†–æ–∑–µ–Ω–±—Ä–æ–∫
        eval_func_cma = benchmarks.rosenbrock
        centroid_start = [0.0] * num_individuals

    strategy = cma.Strategy(centroid=centroid_start, sigma=sigma, lambda_=20)
    toolbox_cma = base.Toolbox()
    toolbox_cma.register("evaluate", eval_func_cma)
    
    hall_of_fame = tools.HallOfFame(1)
    logbook_cma = tools.Logbook()
    logbook_cma.header = strategy.fields
    
    for gen in range(ngen_cma):
        population_cma = strategy.generate(creator.IndividualCMA)
        fitnesses = toolbox_cma.map(toolbox_cma.evaluate, population_cma)
        for ind, fit in zip(population_cma, fitnesses):
            ind.fitness.values = fit
        
        strategy.update(population_cma)
        hall_of_fame.update(population_cma)
        logbook_cma.record(gen=gen, evals=len(population_cma), **strategy.getValues())

    # –î–æ–±–∞–≤–ª—è–µ–º min fitness –≤ logbook –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    best_fitness_over_time = [min(strategy.past_f_values[i:i+20]) for i in range(len(strategy.past_f_values)-20)]
    logbook_cma.chapters["min_fitness"] = best_fitness_over_time[:ngen_cma]


    return logbook_cma, hall_of_fame

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ß–∞—Å—Ç–∏ 3, 4, 5 (–µ—Å–ª–∏ –æ–Ω–∏ –±—É–¥—É—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏) –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞

# --- –§–£–ù–ö–¶–ò–ò-–û–¢–†–ò–°–û–í–©–ò–ö–ò –ì–†–ê–§–ò–ö–û–í ---

def create_fitness_plot(logbook):
    """–°–æ–∑–¥–∞–µ—Ç –≥—Ä–∞—Ñ–∏–∫ –¥–∏–Ω–∞–º–∏–∫–∏ —Ñ–∏—Ç–Ω–µ—Å–∞ –¥–ª—è –ß–∞—Å—Ç–∏ 1."""
    fig, ax = plt.subplots(figsize=(10, 5))
    gen = logbook.select("gen")
    max_fitness = logbook.select("max")
    avg_fitness = logbook.select("avg")
    
    ax.plot(gen, max_fitness, "b-", label="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å")
    ax.plot(gen, avg_fitness, "r-", label="–°—Ä–µ–¥–Ω–∏–π —Ñ–∏—Ç–Ω–µ—Å")
    ax.set_xlabel("–ü–æ–∫–æ–ª–µ–Ω–∏–µ")
    ax.set_ylabel("–ó–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–Ω–æ—Å—Ç–∏ (–§–∏—Ç–Ω–µ—Å)")
    ax.set_title("–î–∏–Ω–∞–º–∏–∫–∞ —Ñ–∏—Ç–Ω–µ—Å–∞ –ø–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è–º")
    ax.legend(loc="lower right")
    ax.grid(True)
    return fig

# --- –§–£–ù–ö–¶–ò–ò-–†–ï–ù–î–ï–†–ï–†–´ –î–õ–Ø –ö–ê–ñ–î–û–ô –ì–õ–ê–í–´ ---

def render_chapter_1():
    st.title("–ß–∞—Å—Ç—å 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤ —Å –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏")
    st.markdown("–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ä–µ—à–∞–µ—Ç—Å—è –∑–∞–¥–∞—á–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏ –∏–∑ 0 –∏ 1 (–±–∏—Ç–æ–≤–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞) —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü –±—ã–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–æ –∫ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é. –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º, –∫–ª—é—á–µ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–ø–∏—Å–∞–Ω—ã –Ω–∏–∂–µ.")
    
    col1, col2 = st.columns([1, 2])
    
    with col1:
        st.subheader("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞")
        st.info("""
        **–¶–µ–ª–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–Ω–æ—Å—Ç–∏):** –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ `–¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ - abs(—Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - —Ü–µ–ª–µ–≤–∞—è —Å—É–º–º–∞)`. –ú–∞–∫—Å–∏–º–∏–∑–∏—Ä—É–µ—Ç—Å—è.
        **–ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–ø—É–ª—è—Ü–∏—è:** –°–æ–∑–¥–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏–∑ –∏–Ω–¥–∏–≤–∏–¥—É—É–º–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏—Ö —Å–æ–±–æ–π –±–∏—Ç–æ–≤—ã–µ –≤–µ–∫—Ç–æ—Ä—ã –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã.
        **–ú–µ—Ö–∞–Ω–∏–∑–º —Å–∫—Ä–µ—â–∏–≤–∞–Ω–∏—è:** –î–≤—É—Ö—Ç–æ—á–µ—á–Ω—ã–π –∫—Ä–æ—Å—Å–∏–Ω–≥–æ–≤–µ—Ä (`tools.cxTwoPoint`).
        **–ú–µ—Ö–∞–Ω–∏–∑–º –º—É—Ç–∞—Ü–∏–∏:** –ò–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏—Ç–∞ (`tools.mutFlipBit`) —Å –∑–∞–¥–∞–Ω–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é.
        **–ú–µ—Ö–∞–Ω–∏–∑–º —Å–µ–ª–µ–∫—Ü–∏–∏:** –¢—É—Ä–Ω–∏—Ä–Ω–∞—è —Å–µ–ª–µ–∫—Ü–∏—è (`tools.selTournament`) —Å —Ä–∞–∑–º–µ—Ä–æ–º —Ç—É—Ä–Ω–∏—Ä–∞ 3.
        """)
        target_sum = st.slider("–¶–µ–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É–º–º—ã", min_value=10, max_value=100, value=45)
        n_attr = st.slider("–î–ª–∏–Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É—É–º–∞ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏—Ç)", min_value=20, max_value=150, value=75)
        ngen = st.slider("–ß–∏—Å–ª–æ –ø–æ–∫–æ–ª–µ–Ω–∏–π", min_value=10, max_value=200, value=60)
        cxpb = st.slider("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫—Ä–µ—â–∏–≤–∞–Ω–∏—è (cxpb)", min_value=0.0, max_value=1.0, value=0.8)
        mutpb = st.slider("–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –º—É—Ç–∞—Ü–∏–∏ (mutpb)", min_value=0.0, max_value=1.0, value=0.1)
        run_button = st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º")

    with col2:
        st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è")
        if run_button:
            with st.spinner("–ó–∞–ø—É—Å–∫ —ç–≤–æ–ª—é—Ü–∏–∏..."):
                best_individual, logbook = run_genetic_algorithm(target_sum, n_attr, ngen, cxpb, mutpb)
                fig = create_fitness_plot(logbook)
                st.pyplot(fig)
                st.subheader("–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –¥–∏–Ω–∞–º–∏–∫–∏ —Ñ–∏—Ç–Ω–µ—Å–∞")
                st.markdown("""
                –î–∞–Ω–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞. –ù–∞ –Ω–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –¥–≤–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è, —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è:
                - **–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å (—Å–∏–Ω—è—è –ª–∏–Ω–∏—è):** –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É—É–º–∞ –≤ —Ç–µ–∫—É—â–µ–π –ø–æ–ø—É–ª—è—Ü–∏–∏. –†–æ—Å—Ç —ç—Ç–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, —á—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.
                - **–°—Ä–µ–¥–Ω–∏–π —Ñ–∏—Ç–Ω–µ—Å (–∫—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è):** –û—Ç—Ä–∞–∂–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –∏–Ω–¥–∏–≤–∏–¥—É—É–º–æ–≤ –≤ –ø–æ–ø—É–ª—è—Ü–∏–∏. –£—Å—Ç–æ–π—á–∏–≤—ã–π —Ä–æ—Å—Ç —ç—Ç–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤—É–µ—Ç –æ —Ç–æ–º, —á—Ç–æ –≤—Å—è –ø–æ–ø—É–ª—è—Ü–∏—è –≤ —Ü–µ–ª–æ–º —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –≤ —Å—Ç–æ—Ä–æ–Ω—É –±–æ–ª–µ–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ "–æ—Å–æ–±–∏".
                
                –°–æ–≤–º–µ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç –æ–±–æ–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —É—Å–ø–µ—à–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –∏ —Å—Ö–æ–¥–∏–º–æ—Å—Ç—å –ø–æ–ø—É–ª—è—Ü–∏–∏ –∫ —Ä–µ—à–µ–Ω–∏—é –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏.
                """)
        else:
            st.info("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º' –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")


def render_chapter_2():
    st.title("–ß–∞—Å—Ç—å 2: –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ö–æ–¥–∞ —ç–≤–æ–ª—é—Ü–∏–∏ (CMA-ES)")
    st.markdown("""
    –í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —ç–≤–æ–ª—é—Ü–∏–∏ —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π –º–∞—Ç—Ä–∏—Ü—ã –∫–æ–≤–∞—Ä–∏–∞—Ü–∏–∏ (CMA-ES) ‚Äî –º–æ—â–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –ê–ª–≥–æ—Ä–∏—Ç–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –†–∞—Å—Ç—Ä–∏–≥–∏–Ω–∞ –∏ –†–æ–∑–µ–Ω–±—Ä–æ–∫–∞.
    –ß–µ—Ç—ã—Ä–µ –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π "–ø—Ä–∏–±–æ—Ä–Ω—É—é –ø–∞–Ω–µ–ª—å" –∞–ª–≥–æ—Ä–∏—Ç–º–∞, –ø–æ–∫–∞–∑—ã–≤–∞—é—â—É—é, –∫–∞–∫ –µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–∏—Å–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –º–∏–Ω–∏–º—É–º–∞.
    """)

    selected_func = st.selectbox("–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è", ["–†–∞—Å—Ç—Ä–∏–≥–∏–Ω", "–†–æ–∑–µ–Ω–±—Ä–æ–∫"], key="cma_func")
    ngen_cma = st.slider("–ß–∏—Å–ª–æ –ø–æ–∫–æ–ª–µ–Ω–∏–π (CMA-ES)", 50, 500, 125, key="cma_ngen")
    sigma = st.slider("–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ Sigma", 0.1, 10.0, 5.0, key="cma_sigma")
    run_button_cma = st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å CMA-ES")

    if run_button_cma:
        with st.spinner("–ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ CMA-ES..."):
            logbook_cma, hall_of_fame = run_cma_es(selected_func, ngen_cma, sigma)
            st.subheader(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ {selected_func}")
            st.metric("–ù–∞–π–¥–µ–Ω–Ω—ã–π –º–∏–Ω–∏–º—É–º —Ñ—É–Ω–∫—Ü–∏–∏", f"{hall_of_fame[0].fitness.values[0]:.4f}")

            st.subheader("–ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
            tab1, tab2, tab3, tab4 = st.tabs(["–õ—É—á—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏", "–ó–Ω–∞—á–µ–Ω–∏–µ Sigma", "–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Å–µ–π", "–î–∏–∞–≥–æ–Ω–∞–ª—å D"])

            with tab1:
                st.subheader("–ì—Ä–∞—Ñ–∏–∫ –ª—É—á—à–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–†–∏—Å—É–Ω–∫–∏ 1, 7)")
                fig1, ax1 = plt.subplots()
                ax1.plot(logbook_cma.chapters["min_fitness"])
                ax1.set_xlabel("–ü–æ–∫–æ–ª–µ–Ω–∏–µ")
                ax1.set_ylabel("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ f(x)")
                ax1.set_title("–°—Ö–æ–¥–∏–º–æ—Å—Ç—å: –õ—É—á—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏")
                ax1.grid(True)
                st.pyplot(fig1)
                st.markdown("""**–û–ø–∏—Å–∞–Ω–∏–µ:** –ì—Ä–∞—Ñ–∏–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å—Ö–æ–¥–∏–º–æ—Å—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–∞...""")

            with tab2:
                st.subheader("–ì—Ä–∞—Ñ–∏–∫ –∑–Ω–∞—á–µ–Ω–∏—è Sigma (–†–∏—Å—É–Ω–∫–∏ 2, 8)")
                fig2, ax2 = plt.subplots()
                ax2.plot(logbook_cma.select('sigma'))
                ax2.set_xlabel("–ü–æ–∫–æ–ª–µ–Ω–∏–µ")
                ax2.set_ylabel("–ó–Ω–∞—á–µ–Ω–∏–µ Sigma")
                ax2.set_title("–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ —à–∞–≥–∞: –î–∏–Ω–∞–º–∏–∫–∞ Sigma")
                ax2.grid(True)
                st.pyplot(fig2)
                st.markdown("""**–û–ø–∏—Å–∞–Ω–∏–µ:** Sigma –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à–∞–≥–∞...""")

            with tab3:
                st.subheader("–ì—Ä–∞—Ñ–∏–∫ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –æ—Å–µ–π (–†–∏—Å—É–Ω–∫–∏ 3, 9)")
                fig3, ax3 = plt.subplots()
                ax3.semilogy(logbook_cma.select('axis_ratio'))
                ax3.set_xlabel("–ü–æ–∫–æ–ª–µ–Ω–∏–µ")
                ax3.set_ylabel("–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Å–µ–π (–ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∞—è —à–∫–∞–ª–∞)")
                ax3.set_title("–ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ñ–æ—Ä–º—ã: –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ—Å–µ–π —ç–ª–ª–∏–ø—Å–æ–∏–¥–∞")
                ax3.grid(True)
                st.pyplot(fig3)
                st.markdown("""**–û–ø–∏—Å–∞–Ω–∏–µ:** –ì—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã...""")
            
            with tab4:
                st.subheader("–ì—Ä–∞—Ñ–∏–∫ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ D (–†–∏—Å—É–Ω–∫–∏ 4, 10)")
                fig4, ax4 = plt.subplots()
                ax4.semilogy([l['diagD'] for l in logbook_cma])
                ax4.set_xlabel("–ü–æ–∫–æ–ª–µ–Ω–∏–µ")
                ax4.set_ylabel("–ó–Ω–∞—á–µ–Ω–∏—è diag(D) (–ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∞—è —à–∫–∞–ª–∞)")
                ax4.set_title("–ê–¥–∞–ø—Ç–∞—Ü–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏: –î–∏–Ω–∞–º–∏–∫–∞ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ D")
                ax4.grid(True)
                st.pyplot(fig4)
                st.markdown("""**–û–ø–∏—Å–∞–Ω–∏–µ:** D —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Ç—Ä–∏—Ü—ã –∫–æ–≤–∞—Ä–∏–∞—Ü–∏–∏ C...""")


def render_placeholder_chapter(title, description):
    """–†–µ–Ω–¥–µ—Ä–µ—Ä-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≥–ª–∞–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."""
    st.title(title)
    st.markdown(description)
    st.warning("–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
    st.image("https://i.imgur.com/3_d.png".replace("_", "u4I4fB"), caption="–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è!")


# --- –ì–õ–ê–í–ù–´–ô –†–û–£–¢–ï–† –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---

st.sidebar.title("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç—á–µ—Ç–∞")
chapter = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:", [
    "–ß–∞—Å—Ç—å 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤",
    "–ß–∞—Å—Ç—å 2: –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ö–æ–¥–∞ —ç–≤–æ–ª—é—Ü–∏–∏ (CMA-ES)",
    "–ß–∞—Å—Ç—å 3: –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è",
    "–ß–∞—Å—Ç—å 4: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞",
    "–ß–∞—Å—Ç—å 5: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
])

if chapter == "–ß–∞—Å—Ç—å 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤":
    render_chapter_1()
elif chapter == "–ß–∞—Å—Ç—å 2: –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ö–æ–¥–∞ —ç–≤–æ–ª—é—Ü–∏–∏ (CMA-ES)":
    render_chapter_2()
elif chapter == "–ß–∞—Å—Ç—å 3: –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è":
    render_placeholder_chapter(chapter, "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –Ω–∞–∏–ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–º –∞–ø–ø—Ä–æ–∫—Å–∏–º–∏—Ä—É—é—â–µ–≥–æ –∑–∞–¥–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä —Ç–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö.")
elif chapter == "–ß–∞—Å—Ç—å 4: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞":
    render_placeholder_chapter(chapter, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞.")
elif chapter == "–ß–∞—Å—Ç—å 5: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞":
     render_placeholder_chapter(chapter, "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ –∫–æ–ª–ª–∞–±–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–∏–ø–∞ 'user-based' —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –ü–∏—Ä—Å–æ–Ω–∞.")
